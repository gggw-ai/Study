[General]
# 通用设置
# > 日志等级
loglevel = notify
# > 跳过代理
skip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local
# > Always Real IP Hosts
always-real-ip = *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.logon.battlenet.com.cn, *.logon.battle.net, stun.l.google.com
http-listen = 0.0.0.0:8888
socks5-listen = 0.0.0.0:8889
# > 允许 Wi-Fi 访问iOS
allow-wifi-access = true
wifi-access-http-port = 6152
wifi-access-socks5-port = 6153
# > Internet 测试 URL
internet-test-url = http://www.aliyun.com
# > 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
# > 测试超时（秒）
test-timeout = 5
# > 排除简单主机名
exclude-simple-hostnames = true
# > IPv6 支持
ipv6 = false
# > 当遇到 REJECT 策略时返回错误页
show-error-page-for-reject = true
# > Wi-Fi 不是主接口则使用SSID组的默认策略
use-default-policy-if-wifi-not-primary = false
# > 增强版 Wi-Fi 助理
wifi-assist = false
# > DNS 服务器
dns-server = 223.5.5.5, 119.29.29.29, system
read-etc-hosts = true
geoip-maxmind-url = https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb
# > etc/hosts 读取 DNS 记录
disable-geoip-db-auto-update = false
# > 路由防火墙
# 包含所有的网络请求
udp-policy-not-supported-behaviour = REJECT
# 包含本地网络请求
http-api-tls = false
# > 自定义 GeoIP 数据库
http-api-web-dashboard = true
# > GeoIP 禁用自动更新
# > 隐藏 VPN 图标
hide-vpn-icon = true
# > UDP IP 防泄漏
allow-hotspot-access = true
# > HTTP-API-TLS
# > Web 控制器
# > All Hybrid 网络并发
# all-hybrid = false
# > 兼容模式
# compatibility-mode = false
http-api = muzimuzi@0.0.0.0:6171
ipv6-vif = auto

[Replica]
# > 隐藏 Apple 请求
hide-apple-request = false
# > 隐藏崩溃追踪器请求
hide-crash-reporter-request = true
# > 隐藏 UDP 会话
hide-udp = false
# > 关键词过滤器
keyword-filter-type = false

[Proxy]
直连 = direct

[Proxy Group]
# 机场
白月光 = select, update-interval=21600, no-alert=0, hidden=0, include-all-proxies=0, policy-path=https://wxma2nua.bygcloud.com/api/v1/client/subscribe?token=8bc065c093c1ce49078261c1b9a02b4b
传家宝 = select, update-interval=21600, no-alert=0, hidden=0, include-all-proxies=0, policy-path=https://xn--4gq62f52gdss.com/api/v1/client/subscribe?token=f1fe064c5065f504fd46ed6df89a0084, policy-regex-filter=^(?!.*?无法|一元)

# 策略组
Proxy = select, 香港节点Ⅰ, 香港节点Ⅱ, 台湾节点, 日本节点, 狮城节点, 美国节点, no-alert=0, hidden=0, include-all-proxies=0
# Telegram
Telegram = select, 香港节点Ⅰ, 香港节点Ⅱ, 台湾节点, 日本节点, 狮城节点, 美国节点, no-alert=0, hidden=0, include-all-proxies=0
# Netflix
Netflix = select, 香港节点Ⅰ, 香港节点Ⅱ, 台湾节点, 日本节点, 狮城节点, 美国节点, 土耳其节点, no-alert=0, hidden=0, include-all-proxies=0
# YouTube
YouTube = select, 香港节点Ⅰ, 香港节点Ⅱ, 台湾节点, 狮城节点, 日本节点, 日本节点Ⅱ, 美国节点, no-alert=0, hidden=0, include-all-proxies=0
# Disney
Disney = select, 香港节点Ⅰ, 香港节点Ⅱ, 台湾节点, 狮城节点, 日本节点, 美国节点, no-alert=0, hidden=0, include-all-proxies=0
# Emby
Emby = select, 香港节点Ⅰ, 香港节点Ⅱ, 台湾节点, 狮城节点, 日本节点, 美国节点, no-alert=0, hidden=0, include-all-proxies=0
# Steam
Steam = select, 香港节点Ⅰ, 阿根廷节点, 土耳其节点
# SpeedTest
Speedtest = select, 直连, 香港节点Ⅰ, 香港节点Ⅱ, 台湾节点, 狮城节点, 日本节点, 日本节点Ⅱ, 美国节点, no-alert=0, hidden=0, include-all-proxies=0

# 节点
香港节点Ⅰ = url-test, interval=600, tolerance=100, timeout=5, evaluate-before-use=true, policy-regex-filter=(?=.* 港|HK|Hong|hk|🇭🇰), no-alert=1, hidden=1, include-all-proxies=0, include-other-group=白月光, persistent=0
# 香港节点Ⅱ = url-test, interval=600, tolerance=100, timeout=5, evaluate-before-use=true, policy-regex-filter=(?=.* 港|HK|Hong|hk|🇭🇰)^((?!直连).)*$, no-alert=1, hidden=1, include-all-proxies=0, include-other-group=传家宝, persistent=0
香港节点Ⅱ = url-test, interval=600, tolerance=100, timeout=5, evaluate-before-use=true, policy-regex-filter=(?=.* 港|HK|Hong|hk|🇭🇰), no-alert=1, hidden=1, include-all-proxies=0, include-other-group=传家宝, persistent=0
台湾节点 = url-test, interval=600, tolerance=100, timeout=5, evaluate-before-use=true, policy-regex-filter=湾|TW|Taiwan|tw, no-alert=1, hidden=1, include-all-proxies=0, include-other-group=白月光, persistent=0
日本节点 = url-test, interval=600, tolerance=100, timeout=5, policy-regex-filter=日|JP|Japan|🇯🇵, no-alert=1, evaluate-before-use=true, hidden=1, include-all-proxies=0, include-other-group=白月光, persistent=0
日本节点Ⅱ = url-test, interval=600, tolerance=100, timeout=5, policy-regex-filter=日|JP|Japan|🇯🇵, no-alert=1, evaluate-before-use=true, hidden=1, include-all-proxies=0, include-other-group=传家宝, persistent=0
美国节点 = url-test, interval=600, tolerance=100, timeout=5, policy-regex-filter=美|US|🇺🇸, no-alert=1, hidden=1, evaluate-before-use=true, include-all-proxies=0, include-other-group=白月光, persistent=0
狮城节点 = url-test, interval=600, tolerance=100, timeout=5, policy-regex-filter=坡|SG|🇸🇬| Singapore, no-alert=1, hidden=1, evaluate-before-use=true, include-all-proxies=0, include-other-group="传家宝,白月光", persistent=0
阿根廷节点 = url-test, interval=600, tolerance=100, timeout=5, policy-regex-filter=阿根廷|🇦🇷, no-alert=1, hidden=1, evaluate-before-use=true, include-all-proxies=0, include-other-group=白月光, persistent=0
土耳其节点 = url-test, interval=600, tolerance=100, timeout=5, policy-regex-filter=土耳其|🇹🇷, no-alert=1, hidden=1, evaluate-before-use=true, include-all-proxies=0, include-other-group=白月光, persistent=0

[Rule]
DOMAIN,m.jksnrk.bar,直连 // Added for: http://m.jksnrk.bar/zs?for=mtmHWCm
# > 屏蔽YouTube的UDP
AND,((PROTOCOL,UDP), (DOMAIN-SUFFIX,googlevideo.com)),REJECT-NO-DROP
# 阻止电报频繁请求
AND,((PROCESS-NAME,Telegram), (OR,((IP-CIDR,0.0.0.0/8), (IP-CIDR,224.0.0.0/4)))),REJECT
# Surge 的自动 REJECT 保护丢包，防止应用循环请求
IP-CIDR,0.0.0.0/32,REJECT,no-resolve
# 域名拦截
DOMAIN-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/AdvertisingPlus.list,REJECT
# 隐私保护
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list,REJECT-TINYGIF
# 运营商劫持
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list,REJECT-TINYGIF
# Telegram
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/Telegram/Telegram.list,Telegram
# Youtube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,YouTube
# Speedtest
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Speedtest/Speedtest.list,Speedtest
#Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list,Netflix
# emby
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Emby/Emby.list,Emby
# Disney
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list,Disney
# Steam
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Steam/Steam.list,Steam
# Google Voice
DOMAIN,lens.l.google.com,美国节点
# CN
RULE-SET,https://github.com/Blankwonder/surge-list/raw/master/cn.list,直连
# 苹果服务
DOMAIN,apps.apple.com,Proxy
DOMAIN-SUFFIX,ls.apple.com,直连 // Apple Maps
DOMAIN-SUFFIX,store.apple.com,直连 // Apple Store Online
RULE-SET,https://github.com/Blankwonder/surge-list/raw/master/apple.list,Proxy
RULE-SET,SYSTEM,Proxy
# DEST-PORT 端口规则 //邮件
OR,((DEST-PORT,25), (DEST-PORT,110), (DEST-PORT,143)),直连
AND,((OR,((DOMAIN,time-ios.apple.com), (DOMAIN,time.apple.com), (DOMAIN-SUFFIX,pool.ntp.org))), (DEST-PORT,123)),直连
# 剩余未匹配的国内网站
DOMAIN-SUFFIX,cn,直连
DOMAIN-KEYWORD,-cn,直连
# 局域网指定分流
RULE-SET,LAN,直连
# 国内直连
RULE-SET,https://github.com/VirgilClyne/GetSomeFries/blob/main/ruleset/ASN.China.list?raw=true,直连
FINAL,Proxy,dns-failed

[Host]
# > Firebase Cloud Messaging
mtalk.google.com = 108.177.125.188
# > Google Dl
dl.google.com = server:119.29.29.29
dl.l.google.com = server:119.29.29.29
update.googleapis.com = server:119.29.29.29

[URL Rewrite]
# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302
# Redirect Google Maps Service
^https?:\/\/(ditu|maps).google\.cn https://maps.google.com 302

[MITM]
skip-server-cert-verify = true
tcp-connection = true
h2 = true
hostname = mp.weixin.qq.com, testflight.apple.com, www.google.cn, *.google-analytics.com, zero-trust-client.cloudflareclient.com
ca-passphrase = 926F05E0
ca-p12 = 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

